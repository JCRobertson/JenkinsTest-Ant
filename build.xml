<project name="JenkinsTest" default="dist" basedir=".">
	<description>
        simple example build file
    </description>
	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="tests" location="tests"/>
	<property name="build" location="build"/>
	<property name="dist"  location="dist"/>
	<property name="reports" location="reports"/>

	<path id="base.path">
		<pathelement path="${classpath}" />
		<pathelement location="/usr/share/java/junit.jar" />
	</path>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>

	
	<target name="junit" depends="compile">
		<junit printsummary="on" errorproperty="tests failed">
			<classpath>
			    <pathelement location="${tests}"/>
				<!--  <pathelement path="${classpath}"/>
				<pathelement location="${build}"/>-->
				<pathelement location="/usr/share/java/junit.jar" />
			</classpath>
	
			<formatter type="plain" usefile="false"/>
	
			<batchtest fork="no" todir="${reports}">
				<fileset dir="${tests}">
					<!-- <include name="**/*Test*.java"/>
					<exclude name="**/*AllTests.java"/>-->
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="compile" depends="init" description="compile the source " >
		<!-- Compile the java code from ${src} into ${build} -->
		<javac includeantruntime="false" srcdir="${src}" destdir="${build}"/>
	</target>

	<target name="dist" depends="junit"
        description="generate the distribution" >
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/lib"/>

		<!-- Put everything in ${build} into the JenkinsTest-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/lib/MyProject-${DSTAMP}.jar" basedir="${build}"/>
	</target>

	<target name="clean"
        description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>